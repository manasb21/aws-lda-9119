name: 'Terraform'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      TF_WORKSPACE:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: Default
      golang_app_dir: application/hello-world

    steps:
      - name: checkout binary code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
            go-version: '1.17.6'
      - name: build binary
        run: |
          pwd
          ls -lrt
          env GOOS=linux GOARCH=amd64 go build -o ../bin/hello
        working-directory: ${{ env.golang_app_dir }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "eu-central-1"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: 1.2.4
      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform init
        id: init
        run: |
          ls -lrt ../../values/
          terraform init

        working-directory: ${{ inputs.working-directory }}
        env:
            TF_WORKSPACE: ${{ inputs.TF_WORKSPACE }}
            TF_CLI_ARGS_init: -backend-config=../../values/${{ inputs.environment }}-backend.conf  -upgrade -reconfigure

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -var-file=../../values/${{ inputs.environment }}.tfvars
        working-directory: ${{ inputs.working-directory }}

      - name: Terraform apply
        id: apply
        run: terraform apply -var-file=../../values/${{ inputs.environment }}.tfvars --auto-approve
        working-directory: ${{ inputs.working-directory }}
